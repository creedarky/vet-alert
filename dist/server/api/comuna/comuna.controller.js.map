{"version":3,"sources":["api/comuna/comuna.controller.js"],"names":["index","show","create","upsert","patch","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","then","end","handleEntityNotFound","handleError","send","req","findAll","include","model","as","catch","find","where","id","params","body"],"mappings":"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","file":"comuna.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/comunas              ->  index\n * POST    /api/comunas              ->  create\n * GET     /api/comunas/:id          ->  show\n * PUT     /api/comunas/:id          ->  upsert\n * PATCH   /api/comunas/:id          ->  patch\n * DELETE  /api/comunas/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport {Comuna, Ciudad} from '../../sqldb';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if (entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if (entity) {\n      return entity.destroy()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Comunas\nexport function index(req, res) {\n  return Comuna.findAll({\n    include: [\n      {\n        model: Ciudad, as: 'ciudad'\n      }\n    ]\n  })\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Comuna from the DB\nexport function show(req, res) {\n  return Comuna.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Comuna in the DB\nexport function create(req, res) {\n  return Comuna.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Comuna in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body.id) {\n    delete req.body.id;\n  }\n\n  return Comuna.upsert(req.body, {\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Comuna in the DB\nexport function patch(req, res) {\n  if (req.body.id) {\n    delete req.body.id;\n  }\n  return Comuna.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Comuna from the DB\nexport function destroy(req, res) {\n  return Comuna.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}