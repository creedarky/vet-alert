{"version":3,"sources":["api/apiutils.js"],"names":["respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","destroy","then","end","handleEntityNotFound","handleError","send"],"mappings":";;;;;;;;;;AAAA;;;;;;kBAEe;AACbA,mBADa,6BACKC,GADL,EACUC,UADV,EACsB;AACjCA,iBAAaA,cAAc,GAA3B;AACA,WAAO,YAAsB;AAAA,UAAbC,MAAa,uEAAJ,EAAI;;AAC3B,UAAIA,MAAJ,EAAY;AACV,eAAOF,IAAIG,MAAJ,CAAWF,UAAX,EAAuBG,IAAvB,CAA4BF,MAA5B,CAAP;AACD;AACD,aAAOF,IAAIG,MAAJ,CAAWF,UAAX,EAAuBG,IAAvB,CAA4B,EAA5B,CAAP;AACD,KALD;AAMD,GATY;AAWbC,cAXa,wBAWAC,OAXA,EAWS;AACpB,WAAO,UAASJ,MAAT,EAAiB;AACtB,UAAI;AACF,gCAAUK,KAAV,CAAgBL,MAAhB,EAAwBI,OAAxB,EAAiC,YAAa,IAA9C;AACD,OAFD,CAEE,OAAME,GAAN,EAAW;AACX,eAAO,kBAAQC,MAAR,CAAeD,GAAf,CAAP;AACD;;AAED,aAAON,OAAOQ,IAAP,EAAP;AACD,KARD;AASD,GArBY;AAuBbC,cAvBa,wBAuBAX,GAvBA,EAuBK;AAChB,WAAO,UAASE,MAAT,EAAiB;AACtB,UAAIA,MAAJ,EAAY;AACV,eAAOA,OAAOU,OAAP,GACJC,IADI,CACC,YAAM;AACVb,cAAIG,MAAJ,CAAW,GAAX,EAAgBW,GAAhB;AACD,SAHI,CAAP;AAID;AACF,KAPD;AAQD,GAhCY;AAkCbC,sBAlCa,gCAkCQf,GAlCR,EAkCa;AACxB,WAAO,UAASE,MAAT,EAAiB;AACtB,UAAI,CAACA,MAAL,EAAa;AACXF,YAAIG,MAAJ,CAAW,GAAX,EAAgBW,GAAhB;AACA,eAAO,IAAP;AACD;AACD,aAAOZ,MAAP;AACD,KAND;AAOD,GA1CY;AA2Cbc,aA3Ca,uBA2CDhB,GA3CC,EA2CIC,UA3CJ,EA2CgB;AAC3BA,iBAAaA,cAAc,GAA3B;AACA,WAAO,UAASO,GAAT,EAAc;AACnBR,UAAIG,MAAJ,CAAWF,UAAX,EAAuBgB,IAAvB,CAA4BT,GAA5B;AACD,KAFD;AAGD;AAhDY,C","file":"apiutils.js","sourcesContent":["import jsonpatch from 'fast-json-patch';\n\nexport default {\n  respondWithResult(res, statusCode) {\n    statusCode = statusCode || 200;\n    return function(entity = {}) {\n      if (entity) {\n        return res.status(statusCode).json(entity);\n      }\n      return res.status(statusCode).json({});\n    };\n  },\n\n  patchUpdates(patches) {\n    return function(entity) {\n      try {\n        jsonpatch.apply(entity, patches, /*validate*/ true);\n      } catch(err) {\n        return Promise.reject(err);\n      }\n\n      return entity.save();\n    };\n  },\n\n  removeEntity(res) {\n    return function(entity) {\n      if (entity) {\n        return entity.destroy()\n          .then(() => {\n            res.status(204).end();\n          });\n      }\n    };\n  },\n\n  handleEntityNotFound(res) {\n    return function(entity) {\n      if (!entity) {\n        res.status(404).end();\n        return null;\n      }\n      return entity;\n    };\n  },\n  handleError(res, statusCode) {\n    statusCode = statusCode || 500;\n    return function(err) {\n      res.status(statusCode).send(err);\n    };\n  }\n}\n"]}