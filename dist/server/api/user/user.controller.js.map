{"version":3,"sources":["api/user/user.controller.js"],"names":["index","create","show","destroy","changePassword","me","authCallback","validationError","res","statusCode","err","status","json","handleError","send","req","findAll","attributes","then","users","catch","newUser","build","body","setDataValue","save","user","token","sign","id","secrets","session","expiresIn","next","userId","params","find","where","end","profile","oldPass","String","oldPassword","newPass","newPassword","authenticate","password","include","model","as","redirect"],"mappings":"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","file":"user.controller.js","sourcesContent":["'use strict';\n\nimport {User, Rol, Permiso} from '../../sqldb';\nimport config from '../../config/environment';\nimport jwt from 'jsonwebtoken';\n\nfunction validationError(res, statusCode) {\n  statusCode = statusCode || 422;\n  return function(err) {\n    return res.status(statusCode).json(err);\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    return res.status(statusCode).send(err);\n  };\n}\n\n/**\n * Get list of users\n * restriction: 'admin'\n */\nexport function index(req, res) {\n  return User.findAll({\n    attributes: [\n      'id',\n      'nombre',\n      'apellido',\n      'email',\n      'provider',\n    ]\n  })\n    .then(users => {\n      res.status(200).json(users);\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Creates a new user\n */\nexport function create(req, res) {\n  var newUser = User.build(req.body);\n  newUser.setDataValue('provider', 'local');\n  newUser.setDataValue('role', 'user');\n  return newUser.save()\n    .then(function(user) {\n      var token = jwt.sign({ id: user.id }, config.secrets.session, {\n        expiresIn: 60 * 60 * 5\n      });\n      res.json({ token });\n    })\n    .catch(validationError(res));\n}\n\n/**\n * Get a single user\n */\nexport function show(req, res, next) {\n  var userId = req.params.id;\n\n  return User.find({\n    where: {\n      id: userId\n    }\n  })\n    .then(user => {\n      if (!user) {\n        return res.status(404).end();\n      }\n      res.json(user.profile);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Deletes a user\n * restriction: 'admin'\n */\nexport function destroy(req, res) {\n  return User.destroy({ where: { id: req.params.id } })\n    .then(function() {\n      res.status(204).end();\n    })\n    .catch(handleError(res));\n}\n\n/**\n * Change a users password\n */\nexport function changePassword(req, res) {\n  var userId = req.user.id;\n  var oldPass = String(req.body.oldPassword);\n  var newPass = String(req.body.newPassword);\n\n  return User.find({\n    where: {\n      id: userId\n    }\n  })\n    .then(user => {\n      if (user.authenticate(oldPass)) {\n        user.password = newPass;\n        return user.save()\n          .then(() => {\n            res.status(204).end();\n          })\n          .catch(validationError(res));\n      } else {\n        return res.status(403).end();\n      }\n    });\n}\n\n/**\n * Get my info\n */\nexport function me(req, res, next) {\n  var userId = req.user.id;\n\n  return User.find({\n    where: {\n      id: userId\n    },\n    attributes: [\n      'id',\n      'nombre',\n      'apellido',\n      'email',\n      'provider',\n    ],\n    include: [\n      {\n        model: Rol, as: 'rol',\n        include: [\n          Permiso\n        ]\n      }\n    ]\n  })\n    .then(user => { // don't ever give out the password or salt\n      if (!user) {\n        return res.status(401).end();\n      }\n      res.json(user);\n    })\n    .catch(err => next(err));\n}\n\n/**\n * Authentication callback\n */\nexport function authCallback(req, res) {\n  res.redirect('/');\n}\n"]}