{"version":3,"sources":["api/apoderado/apoderado.controller.js"],"names":["index","show","create","upsert","patch","destroy","req","res","findAll","include","model","as","then","respondWithResult","catch","handleError","find","where","id","params","handleEntityNotFound","body","result","patchUpdates","removeEntity"],"mappings":"AAAA;;;;;;;;;;AAUA;;;;;QAOgBA,K,GAAAA,K;QAaAC,I,GAAAA,I;QAYAC,M,GAAAA,M;QAOAC,M,GAAAA,M;QAkBAC,K,GAAAA,K;QAgBAC,O,GAAAA,O;;AAtEhB;;;;AACA;;;;AAEA;AACO,SAASL,KAAT,CAAeM,GAAf,EAAoBC,GAApB,EAAyB;AAC9B,SAAO,iBAAUC,OAAV,CAAkB;AACvBC,aAAS,CACP;AACEC,0BADF,EACiBC,IAAI;AADrB,KADO;AADc,GAAlB,EAOJC,IAPI,CAOC,mBAASC,iBAAT,CAA2BN,GAA3B,CAPD,EAQJO,KARI,CAQE,mBAASC,WAAT,CAAqBR,GAArB,CARF,CAAP;AASD;;AAED;AACO,SAASN,IAAT,CAAcK,GAAd,EAAmBC,GAAnB,EAAwB;AAC7B,SAAO,iBAAUS,IAAV,CAAe;AACpBC,WAAO;AACLC,UAAIZ,IAAIa,MAAJ,CAAWD;AADV;AADa,GAAf,EAKJN,IALI,CAKC,mBAASQ,oBAAT,CAA8Bb,GAA9B,CALD,EAMJK,IANI,CAMC,mBAASC,iBAAT,CAA2BN,GAA3B,CAND,EAOJO,KAPI,CAOE,mBAASC,WAAT,CAAqBR,GAArB,CAPF,CAAP;AAQD;;AAED;AACO,SAASL,MAAT,CAAgBI,GAAhB,EAAqBC,GAArB,EAA0B;AAC/B,SAAO,iBAAUL,MAAV,CAAiBI,IAAIe,IAArB,EACJT,IADI,CACC,mBAASC,iBAAT,CAA2BN,GAA3B,EAAgC,GAAhC,CADD,EAEJO,KAFI,CAEE,mBAASC,WAAT,CAAqBR,GAArB,CAFF,CAAP;AAGD;;AAED;AACO,SAASJ,MAAT,CAAgBG,GAAhB,EAAqBC,GAArB,EAA0B;AAC/B;AACA;AACA;;AAEA,SAAO,iBAAUJ,MAAV,CAAiBG,IAAIe,IAArB,EAA2B;AAChCJ,WAAO;AACLC,UAAIZ,IAAIa,MAAJ,CAAWD;AADV;AADyB,GAA3B,EAKJN,IALI,CAKC,UAACU,MAAD,EAAY;AAChB,0BAAUhB,GAAV;AACA,uBAASO,iBAAT,CAA2BN,GAA3B,EAAgC,GAAhC,EAAqCe,MAArC;AACD,GARI,EASJR,KATI,CASE,mBAASC,WAAT,CAAqBR,GAArB,CATF,CAAP;AAUD;;AAED;AACO,SAASH,KAAT,CAAeE,GAAf,EAAoBC,GAApB,EAAyB;AAC9B,MAAID,IAAIe,IAAJ,CAASH,EAAb,EAAiB;AACf,WAAOZ,IAAIe,IAAJ,CAASH,EAAhB;AACD;AACD,SAAO,iBAAUF,IAAV,CAAe;AACpBC,WAAO;AACLC,UAAIZ,IAAIa,MAAJ,CAAWD;AADV;AADa,GAAf,EAKJN,IALI,CAKC,mBAASQ,oBAAT,CAA8Bb,GAA9B,CALD,EAMJK,IANI,CAMC,mBAASW,YAAT,CAAsBjB,IAAIe,IAA1B,CAND,EAOJT,IAPI,CAOC,mBAASC,iBAAT,CAA2BN,GAA3B,CAPD,EAQJO,KARI,CAQE,mBAASC,WAAT,CAAqBR,GAArB,CARF,CAAP;AASD;;AAED;AACO,SAASF,OAAT,CAAiBC,GAAjB,EAAsBC,GAAtB,EAA2B;AAChC,SAAO,iBAAUS,IAAV,CAAe;AACpBC,WAAO;AACLC,UAAIZ,IAAIa,MAAJ,CAAWD;AADV;AADa,GAAf,EAKJN,IALI,CAKC,mBAASQ,oBAAT,CAA8Bb,GAA9B,CALD,EAMJK,IANI,CAMC,mBAASY,YAAT,CAAsBjB,GAAtB,CAND,EAOJO,KAPI,CAOE,mBAASC,WAAT,CAAqBR,GAArB,CAPF,CAAP;AAQD","file":"apoderado.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/apoderados              ->  index\n * POST    /api/apoderados              ->  create\n * GET     /api/apoderados/:id          ->  show\n * PUT     /api/apoderados/:id          ->  upsert\n * PATCH   /api/apoderados/:id          ->  patch\n * DELETE  /api/apoderados/:id          ->  destroy\n */\n\n'use strict';\n\n\nimport apiUtils from '../apiutils';\nimport {Apoderado, Comuna, insertLog} from '../../sqldb';\n\n// Gets a list of Apoderados\nexport function index(req, res) {\n  return Apoderado.findAll({\n    include: [\n      {\n        model: Comuna, as: 'comuna',\n      }\n    ]\n  })\n    .then(apiUtils.respondWithResult(res))\n    .catch(apiUtils.handleError(res));\n}\n\n// Gets a single Apoderado from the DB\nexport function show(req, res) {\n  return Apoderado.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(apiUtils.handleEntityNotFound(res))\n    .then(apiUtils.respondWithResult(res))\n    .catch(apiUtils.handleError(res));\n}\n\n// Creates a new Apoderado in the DB\nexport function create(req, res) {\n  return Apoderado.create(req.body)\n    .then(apiUtils.respondWithResult(res, 201))\n    .catch(apiUtils.handleError(res));\n}\n\n// Upserts the given Apoderado in the DB at the specified ID\nexport function upsert(req, res) {\n  // if (req.body.id) {\n  //   delete req.body.id;\n  // }\n\n  return Apoderado.upsert(req.body, {\n    where: {\n      id: req.params.id\n    }\n  })\n    .then((result) => {\n      insertLog(req);\n      apiUtils.respondWithResult(res, 201)(result);\n    })\n    .catch(apiUtils.handleError(res));\n}\n\n// Updates an existing Apoderado in the DB\nexport function patch(req, res) {\n  if (req.body.id) {\n    delete req.body.id;\n  }\n  return Apoderado.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(apiUtils.handleEntityNotFound(res))\n    .then(apiUtils.patchUpdates(req.body))\n    .then(apiUtils.respondWithResult(res))\n    .catch(apiUtils.handleError(res));\n}\n\n// Deletes a Apoderado from the DB\nexport function destroy(req, res) {\n  return Apoderado.find({\n    where: {\n      id: req.params.id\n    }\n  })\n    .then(apiUtils.handleEntityNotFound(res))\n    .then(apiUtils.removeEntity(res))\n    .catch(apiUtils.handleError(res));\n}\n"]}