{"version":3,"sources":["app.js"],"names":["app","server","createServer","socketio","require","serveClient","env","path","default","route","put","req","res","setPatient","body","sendStatus","startServer","pacientes","idPaciente","nombre","especie","minPpm","maxPpm","minTemp","maxTemp","monitor","idMonitor","active","setCurrentPatients","angularFullstack","listen","port","ip","console","log","get","exports","module"],"mappings":"AAAA;;;;AAIA;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAGA;AACA;AACA;AACA;;AAEA;;AAVA;AAWA,IAAMA,MAAM,wBAAZ,C,CAAuB;AACvB,IAAMC,SAAS,eAAKC,YAAL,CAAkBF,GAAlB,CAAf;AACA,IAAMG,WAAWC,QAAQ,WAAR,EAAqBH,MAArB,EAA6B;AAC5CI,eAAa,sBAAOC,GAAP,KAAe,YADgB;AAE5CC,QAAM;AAFsC,CAA7B,CAAjB;;AAKAH,QAAQ,kBAAR,EAA4BI,OAA5B,CAAoCR,GAApC;AACAI,QAAQ,UAAR,EAAoBI,OAApB,CAA4BR,GAA5B;;AAEAA,IAAIS,KAAJ,CAAU,gBAAV,EACGC,GADH,CACO,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjB,kBAAMC,UAAN,CAAiBF,IAAIG,IAArB;AACAF,MAAIG,UAAJ,CAAe,GAAf;AACD,CAJH;;AAMA;AACA,SAASC,WAAT,GAAuB;AACrB,MAAMC,YAAY,CAChB;AACEC,gBAAY,CADd;AAEEC,YAAQ,SAFV;AAGEC,aAAS;AACPD,cAAQ,OADD;AAEPE,cAAQ,EAFD;AAGPC,cAAQ,GAHD;AAIPC,eAAS,EAJF;AAKPC,eAAS;AALF,KAHX;AAUEC,aAAS;AACPC,iBAAW,CADJ;AAEPC,cAAQ;AAFD;AAVX,GADgB,CAAlB;AAiBA,kBAAMC,kBAAN,CAAyBX,SAAzB;AACAb,UAAQ,mBAAR,EAA6BI,OAA7B,CAAqCL,QAArC;AACAC,UAAQ,kBAAR,EAA4BI,OAA5B,CAAoCL,QAApC;;AAGAH,MAAI6B,gBAAJ,GAAuB5B,OAAO6B,MAAP,CAAc,sBAAOC,IAArB,EAA2B,sBAAOC,EAAlC,EAAsC,YAAW;AACtEC,YAAQC,GAAR,CAAY,4CAAZ,EAA0D,sBAAOH,IAAjE,EAAuE/B,IAAImC,GAAJ,CAAQ,KAAR,CAAvE;AACD,GAFsB,CAAvB;AAGD;;AAEDnB;AACA;AACAoB,UAAUC,OAAOD,OAAP,GAAiBpC,GAA3B","file":"app.js","sourcesContent":["/**\n * Main application file\n */\n\n'use strict';\n\nimport express from 'express';\nimport http from 'http';\n// import sqldb from './sqldb';\nimport config from './config/environment';\nimport cache from './cache'\n\n\n// Inyectar datos de prueba\n// if (config.seedDB) {\n//   require('./config/seed');\n// }\n\n// Setup server\nconst app = express(); //framework para apis\nconst server = http.createServer(app);\nconst socketio = require('socket.io')(server, {\n  serveClient: config.env !== 'production',\n  path: '/socket.io-client'\n});\n\nrequire('./config/express').default(app);\nrequire('./routes').default(app);\n\napp.route('/api/pacientes')\n  .put((req, res) => {\n    cache.setPatient(req.body)\n    res.sendStatus(200);\n  });\n\n// Start server\nfunction startServer() {\n  const pacientes = [\n    {\n      idPaciente: 1,\n      nombre: 'Mascota',\n      especie: {\n        nombre: 'Perro',\n        minPpm: 80,\n        maxPpm: 120,\n        minTemp: 38,\n        maxTemp: 40,\n      },\n      monitor: {\n        idMonitor: 1,\n        active: true,\n      }\n    }\n  ];\n  cache.setCurrentPatients(pacientes);\n  require('./config/socketio').default(socketio, cache);\n  require('./config/arduino').default(socketio, cache);\n\n\n  app.angularFullstack = server.listen(config.port, config.ip, function() {\n    console.log('Express server listening on %d, in %s mode', config.port, app.get('env'));\n  });\n}\n\nstartServer();\n// Expose app\nexports = module.exports = app;\n"]}